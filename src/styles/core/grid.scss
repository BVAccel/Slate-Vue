

.container {
  max-width: $container-max-width;
  margin-left: auto;
  margin-right: auto;
  padding-left: 0;
  padding-right: 0;
  #kuMainContainer {
    max-width: $container-max-width;
  }

  @include tablet-up {
    padding-left: $grid-gutter;
    padding-right: $grid-gutter;
  }

  &.padding-mobile {
    @include mobile-only {
      padding-left: $grid-gutter / 2;
      padding-right: $grid-gutter / 2;
    }
  }
}

@mixin grid-row($size) {
  @for $i from 1 through $grid-column-count {
    &.#{$size}-#{$i} {
      width: percentage($i / $grid-column-count);
    }
  }
}

@mixin block-grid($size) {
  @for $i from 1 through $block-grid-column-count {
    .#{$size}-up-#{$i} > .column {
      width: (100%/$i);
    }
  }
}

.row {
  display: flex;
  flex-wrap: wrap;
  margin-left: -($grid-gutter / 2);
  margin-right: -($grid-gutter / 2);
  @include mobile-only {
    margin-left: -($mobile-grid-gutter / 2);
    margin-right: -($mobile-grid-gutter / 2);
  }
  &.collapse {
    margin-left: 0;
    margin-right: 0;
  }

  &.reverse {
    flex-direction: row-reverse;
  }

  &.reverse-tablet-up {
    @include tablet-up {
      flex-direction: row-reverse;
    }
  }

  &.reverse-desktop-up {
    @include desktop-up {
      flex-direction: row-reverse;
    }
  }

  &[class*="-up-"] {
    & > .column {
      display: flex;
      float: left;
      margin: 0;
      padding: 0 ($grid-gutter / 2) $grid-gutter ($grid-gutter / 2);
      @include mobile-only {
        padding: 0 ($mobile-grid-gutter / 2) $grid-gutter * 2 ($mobile-grid-gutter / 2);
      }
    }
  }

  .column {
    padding: 0 ($grid-gutter / 2);

    @include grid-row('small');

    @include tablet-up {
      @include grid-row('medium');
    }

    @include desktop-up {
      @include grid-row('large');
    }
  }
}

@include block-grid('small');

@include tablet-up {
  @include block-grid('medium');
}

@include desktop-up {
  @include block-grid('large');
}
